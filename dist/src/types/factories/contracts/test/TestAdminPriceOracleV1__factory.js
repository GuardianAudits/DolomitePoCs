"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestAdminPriceOracleV1__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_dolomiteMargin",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "DOLOMITE_MARGIN",
        outputs: [
            {
                internalType: "contract IDolomiteMargin",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_token",
                type: "address",
            },
        ],
        name: "getPrice",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.MonetaryPrice",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_price",
                type: "uint256",
            },
        ],
        name: "ownerSetPrice",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b50604051610adf380380610adf83398101604081905261002f91610075565b6001600160a01b031660805261009e565b60006001600160a01b0382165b92915050565b61005c81610040565b811461006757600080fd5b50565b805161004d81610053565b60006020828403121561008a5761008a600080fd5b6000610096848461006a565b949350505050565b608051610a216100be600039600081816048015260f00152610a216000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806315c14a4a1461004657806341976e091461007d578063f5e8fa4a146100d5575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006040516100749190610624565b60405180910390f35b6100c861008b366004610672565b60408051602080820183526000918290528251808201845273ffffffffffffffffffffffffffffffffffffffff9490941682528190522054815290565b60405161007491906106b2565b6100e86100e33660046106d1565b6100ea565b005b336102027f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561015457600080fd5b505afa158015610168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018c9190610719565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16147f4f6e6c79446f6c6f6d6974654d617267696e00000000000000000000000000007f43616c6c6572206973206e6f74206f776e6572206f6620446f6c6f6d697465008461022c565b5073ffffffffffffffffffffffffffffffffffffffff909116600090815260208190526040902055565b8361032b5761023a83610331565b7f3a2000000000000000000000000000000000000000000000000000000000000061026484610331565b7f203c00000000000000000000000000000000000000000000000000000000000061028e85610402565b6040516102c49594939291907f3e00000000000000000000000000000000000000000000000000000000000000906020016107d8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261032291600401610886565b60405180910390fd5b50505050565b6060600082604051602001610346919061089e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060205b80156103e75780610389816108e2565b91505081818151811061039e5761039e610917565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016156103e25760006103d7826001610946565b835250909392505050565b610379565b5060408051600080825260208201909252905b509392505050565b60408051602a808252606082810190935273ffffffffffffffffffffffffffffffffffffffff841691600091602082018180368337019050509050603060f81b8160008151811061045557610455610917565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350607860f81b8160018151811061049c5761049c610917565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b60148110156103fa5760006104e482600261095e565b90506104f2600f85166105b5565b836104fe83602961099b565b8151811061050e5761050e610917565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600484901c9350610550600f85166105b5565b8361055c83602861099b565b8151811061056c5761056c610917565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505060049290921c91806105ad816109b2565b9150506104ce565b6000600a8210156105d4576105cb603083610946565b60f81b92915050565b6105cb605783610946565b600073ffffffffffffffffffffffffffffffffffffffff82165b92915050565b60006105f9826105df565b60006105f9826105ff565b61061e8161060a565b82525050565b602081016105f98284610615565b600073ffffffffffffffffffffffffffffffffffffffff82166105f9565b61065981610632565b811461066457600080fd5b50565b80356105f981610650565b60006020828403121561068757610687600080fd5b60006106938484610667565b949350505050565b8061061e565b8051602083019061032b848261069b565b602081016105f982846106a1565b80610659565b80356105f9816106c0565b600080604083850312156106e7576106e7600080fd5b60006106f38585610667565b9250506020610704858286016106c6565b9150509250929050565b80516105f981610650565b60006020828403121561072e5761072e600080fd5b6000610693848461070e565b60005b8381101561075557818101518382015260200161073d565b8381111561032b5750506000910152565b6000610770825190565b61077e81856020860161073a565b9290920192915050565b7fffff000000000000000000000000000000000000000000000000000000000000811661061e565b7fff00000000000000000000000000000000000000000000000000000000000000811661061e565b60006107e48289610766565b91506107f08288610788565b6002820191506108008287610766565b915061080c8286610788565b60028201915061081c8285610766565b915061082882846107b0565b506001019695505050505050565b6000610840825190565b80845260208401935061085781856020860161073a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b602080825281016108978184610836565b9392505050565b60006108aa828461069b565b50602001919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000816108f1576108f16108b3565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008219821115610959576109596108b3565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610996576109966108b3565b500290565b6000828210156109ad576109ad6108b3565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109e4576109e46108b3565b506001019056fea26469706673582212204391dc1b338191a37ba2111b59593bf756e837c7c2394afa5b24c0d30a83dc7b64736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class TestAdminPriceOracleV1__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_dolomiteMargin, overrides) {
        return super.deploy(_dolomiteMargin, overrides || {});
    }
    getDeployTransaction(_dolomiteMargin, overrides) {
        return super.getDeployTransaction(_dolomiteMargin, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestAdminPriceOracleV1__factory = TestAdminPriceOracleV1__factory;
TestAdminPriceOracleV1__factory.bytecode = _bytecode;
TestAdminPriceOracleV1__factory.abi = _abi;
