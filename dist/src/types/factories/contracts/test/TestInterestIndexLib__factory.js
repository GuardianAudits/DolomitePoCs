"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestInterestIndexLib__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_dolomiteMargin",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "DOLOMITE_MARGIN",
        outputs: [
            {
                internalType: "contract IDolomiteMargin",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_marketId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "_amountPar",
                type: "tuple",
            },
        ],
        name: "parToWei",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_marketId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "_amountWei",
                type: "tuple",
            },
        ],
        name: "weiToPar",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b506040516108d63803806108d683398101604081905261002f91610075565b6001600160a01b031660805261009e565b60006001600160a01b0382165b92915050565b61005c81610040565b811461006757600080fd5b50565b805161004d81610053565b60006020828403121561008a5761008a600080fd5b6000610096848461006a565b949350505050565b6080516108116100c560003960008181604b0152818160cf015261012501526108116000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806315c14a4a14610046578063bbe99f5814610083578063be447884146100a3575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405161007a9190610476565b60405180910390f35b6100966100913660046104ba565b6100b6565b60405161007a919061052f565b6100966100b13660046104ba565b61010c565b60408051808201909152600080825260208201526101037f0000000000000000000000000000000000000000000000000000000000000000846100fe36869003860186610630565b610159565b90505b92915050565b60408051808201909152600080825260208201526101037f00000000000000000000000000000000000000000000000000000000000000008461015436869003860186610630565b6102a5565b60408051808201909152600080825260208201526040517f56ea84b200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8616906356ea84b2906101c2908790600401610651565b60606040518083038186803b1580156101da57600080fd5b505afa1580156101ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021291906106f3565b8351909150156102635760408051808201909152600181526020828101518582015191830191610258916bffffffffffffffffffffffff16670de0b6b3a76400006103e7565b81525091505061029e565b604080518082019091526000815281516020858101519083019161025891906bffffffffffffffffffffffff16670de0b6b3a76400006103e7565b9392505050565b60408051808201909152600080825260208201526040517f56ea84b200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8616906356ea84b29061030e908790600401610651565b60606040518083038186803b15801561032657600080fd5b505afa15801561033a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035e91906106f3565b8351909150156103af576040518060400160405280600115158152602001610258670de0b6b3a764000084602001516bffffffffffffffffffffffff1687602001516103e79092919063ffffffff16565b60408051808201909152600081528151602085810151908301916102589190670de0b6b3a7640000906bffffffffffffffffffffffff165b60008315806103f4575082155b156104015750600061029e565b8161040d600282610772565b6104178587610786565b61042191906107c3565b61042b9190610772565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8216610106565b600061010682610433565b600061010682610451565b6104708161045c565b82525050565b602081016101068284610467565b805b811461049157600080fd5b50565b803561010681610484565b6000604082840312156104b4576104b4600080fd5b50919050565b600080606083850312156104d0576104d0600080fd5b60006104dc8585610494565b92505060206104ed8582860161049f565b9150509250929050565b801515610470565b80610470565b8051604083019061051684826104f7565b50602082015161052960208501826104ff565b50505050565b604081016101068284610505565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff821117156105b0576105b061053d565b6040525050565b60006105c260405190565b90506105ce828261056c565b919050565b801515610486565b8035610106816105d3565b6000604082840312156105fb576105fb600080fd5b61060560406105b7565b9050600061061384846105db565b825250602061062484848301610494565b60208301525092915050565b60006040828403121561064557610645600080fd5b600061042b84846105e6565b6020810161010682846104ff565b6bffffffffffffffffffffffff8116610486565b80516101068161065f565b63ffffffff8116610486565b80516101068161067e565b6000606082840312156106aa576106aa600080fd5b6106b460606105b7565b905060006106c28484610673565b82525060206106d384848301610673565b60208301525060406106e78482850161068a565b60408301525092915050565b60006060828403121561070857610708600080fd5b600061042b8484610695565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008261078157610781610714565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156107be576107be610743565b500290565b600082198211156107d6576107d6610743565b50019056fea264697066735822122091f4c1de70b9bd6e676f35c278410446f039d5090153664b7bfc43704ea333ea64736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class TestInterestIndexLib__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_dolomiteMargin, overrides) {
        return super.deploy(_dolomiteMargin, overrides || {});
    }
    getDeployTransaction(_dolomiteMargin, overrides) {
        return super.getDeployTransaction(_dolomiteMargin, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestInterestIndexLib__factory = TestInterestIndexLib__factory;
TestInterestIndexLib__factory.bytecode = _bytecode;
TestInterestIndexLib__factory.abi = _abi;
