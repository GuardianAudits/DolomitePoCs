"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestPendlePtOracle__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "cardinalityRequired",
        outputs: [
            {
                internalType: "uint16",
                name: "",
                type: "uint16",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        name: "getOracleState",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
            {
                internalType: "uint16",
                name: "",
                type: "uint16",
            },
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        name: "getPtToAssetRate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "increaseCardinalityRequired",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "oldestObservationSatisfied",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "_increaseCardinalityRequired",
                type: "bool",
            },
            {
                internalType: "uint16",
                name: "_cardinalityRequired",
                type: "uint16",
            },
            {
                internalType: "bool",
                name: "_oldestObservationSatisfied",
                type: "bool",
            },
        ],
        name: "setOracleState",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610405806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063a7af7a1011610050578063a7af7a10146100f9578063abca0eab1461019d578063f6a3b876146101bd57600080fd5b80631371af9614610077578063769019c91461009a578063873e9600146100ba575b600080fd5b6000546100849060ff1681565b6040516100919190610218565b60405180910390f35b6000546100ad90610100900461ffff1681565b6040516100919190610236565b6100ea6100c836600461029b565b505060005460ff80821692610100830461ffff16926301000000900490911690565b604051610091939291906102d8565b61019b610107366004610330565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000169315157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ff169390931761010061ffff9390931692909202919091177fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff16630100000091151591909102179055565b005b6101b06101ab36600461029b565b6101d1565b6040516100919190610386565b600054610084906301000000900460ff1681565b60006040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020590610394565b60405180910390fd5b8015155b82525050565b60208101610226828461020e565b92915050565b61ffff8116610212565b60208101610226828461022c565b600073ffffffffffffffffffffffffffffffffffffffff8216610226565b61026b81610244565b811461027657600080fd5b50565b803561022681610262565b63ffffffff811661026b565b803561022681610284565b600080604083850312156102b1576102b1600080fd5b60006102bd8585610279565b92505060206102ce85828601610290565b9150509250929050565b606081016102e6828661020e565b6102f3602083018561022c565b610300604083018461020e565b949350505050565b80151561026b565b803561022681610308565b61ffff811661026b565b80356102268161031b565b60008060006060848603121561034857610348600080fd5b60006103548686610310565b935050602061036586828701610325565b925050604061037686828701610310565b9150509250925092565b80610212565b602081016102268284610380565b6020808252810161022681600f81527f4e6f7420696d706c656d656e746564000000000000000000000000000000000060208201526040019056fea26469706673582212200147e55d2bbd8e8979230dedfdee7d9ba1c4ba61c1e5c7e80b7f20a1a01610f964736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class TestPendlePtOracle__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestPendlePtOracle__factory = TestPendlePtOracle__factory;
TestPendlePtOracle__factory.bytecode = _bytecode;
TestPendlePtOracle__factory.abi = _abi;
