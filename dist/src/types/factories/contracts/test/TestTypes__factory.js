"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestTypes__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "a",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "b",
                type: "tuple",
            },
        ],
        name: "TypesParAdd",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "a",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "b",
                type: "tuple",
            },
        ],
        name: "TypesParEquals",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "a",
                type: "tuple",
            },
        ],
        name: "TypesParIsGreaterThanOrEqualToZero",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "a",
                type: "tuple",
            },
        ],
        name: "TypesParIsLessThanZero",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "a",
                type: "tuple",
            },
        ],
        name: "TypesParIsNegative",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "a",
                type: "tuple",
            },
        ],
        name: "TypesParIsPositive",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "a",
                type: "tuple",
            },
        ],
        name: "TypesParIsZero",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "a",
                type: "tuple",
            },
        ],
        name: "TypesParNegative",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "a",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "b",
                type: "tuple",
            },
        ],
        name: "TypesParSub",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "a",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "b",
                type: "tuple",
            },
        ],
        name: "TypesWeiAdd",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "a",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "b",
                type: "tuple",
            },
        ],
        name: "TypesWeiEquals",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "a",
                type: "tuple",
            },
        ],
        name: "TypesWeiIsNegative",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "a",
                type: "tuple",
            },
        ],
        name: "TypesWeiIsPositive",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "a",
                type: "tuple",
            },
        ],
        name: "TypesWeiIsZero",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "a",
                type: "tuple",
            },
        ],
        name: "TypesWeiNegative",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "a",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "b",
                type: "tuple",
            },
        ],
        name: "TypesWeiSub",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "TypesZeroPar",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Par",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "TypesZeroWei",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "sign",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.Wei",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610e49806100206000396000f3fe608060405234801561001057600080fd5b50600436106101355760003560e01c806365e5ac31116100b2578063bc0e388011610081578063d5e659e111610066578063d5e659e114610250578063e50cc20514610204578063eb716b971461021757600080fd5b8063bc0e38801461022a578063d42adff41461023d57600080fd5b806365e5ac31146102045780636a939c1f146101f15780639cc6742014610217578063b9c476ce1461022a57600080fd5b80634384a0d211610109578063500bb668116100ee578063500bb668146101de5780635853940f1461013a5780635e2ff75f146101f157600080fd5b80634384a0d21461018957806348598965146101cb57600080fd5b8062eea45a1461013a57806301fd4852146101635780631f0cae4e14610176578063223dce9f14610189575b600080fd5b61014d610148366004610a99565b610263565b60405161015a9190610acc565b60405180910390f35b61014d610171366004610a99565b610274565b61014d610184366004610a99565b61027f565b604080518082018252600080825260209182018190528251808401845281815282018190528251808401909352808352908201525b60405161015a9190610b04565b6101be6101d9366004610b12565b61028a565b6101be6101ec366004610b12565b6102af565b61014d6101ff366004610a99565b6102cd565b61014d610212366004610a99565b6102db565b61014d610225366004610b12565b6102e6565b6101be610238366004610a99565b6102f2565b6101be61024b366004610b12565b610333565b6101be61025e366004610b12565b610351565b600061026e8261036f565b92915050565b600061026e82610386565b600061026e8261039c565b60408051808201909152600080825260208201526102a883836103b5565b9392505050565b60408051808201909152600080825260208201526102a8838361045f565b600061026e82602001511590565b600061026e826104a6565b60006102a883836104bc565b60408051808201825260008082526020808301829052835180850185528281528101919091528251808401909352835115835283810151908301529061026e565b60408051808201909152600080825260208201526102a883836104f8565b60408051808201909152600080825260208201526102a8838361053f565b805160009015801561026e57505060200151151590565b600080826020015111801561026e575050511590565b60006103aa82602001511590565b8061026e5750505190565b60408051808201909152600080825260208201526040805180820190915260008082526020820152825184511515901515141561041057835115158152602080840151908501516104069190610b7e565b60208201526102a8565b826020015184602001511061043957835115158152602080840151908501516104069190610b96565b825115158152602080850151908401516104539190610b96565b60208201529392505050565b6040805180820182526000808252602080830182905283518085018552828152810191909152825180840190935283511583528381015190830152906102a890849061053f565b8051600090801561026e57505060200151151590565b60008160200151836020015114156104ef5760208301516104df5750600161026e565b508051825115159015151461026e565b50600092915050565b6040805180820182526000808252602080830182905283518085018552828152810191909152825180840190935283511583528381015190830152906102a89084906103b5565b6040805180820190915260008082526020820152604080518082019091526000808252602082015282518451151590151514156105b457835115158152602080840151908501516105989161059391610b7e565b61061b565b6fffffffffffffffffffffffffffffffff1660208201526102a8565b82602001518460200151106105e057835115158152602080840151908501516105989161059391610b96565b825115158152602080850151908401516105fd9161059391610b96565b6fffffffffffffffffffffffffffffffff1660208201529392505050565b60008161026e6fffffffffffffffffffffffffffffffff821682147f446f6c6f6d6974654d617267696e4d61746800000000000000000000000000007f556e73616665206361737420746f2075696e74313238000000000000000000008483610778576106878361077e565b7f3a200000000000000000000000000000000000000000000000000000000000006106b18461077e565b7f203c0000000000000000000000000000000000000000000000000000000000006106db8561084b565b6040516107119594939291907f3e0000000000000000000000000000000000000000000000000000000000000090602001610c4b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261076f91600401610cf9565b60405180910390fd5b50505050565b60606000826040516020016107939190610d0a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060205b801561083457806107d681610d1f565b9150508181815181106107eb576107eb610d54565b01602001517fff00000000000000000000000000000000000000000000000000000000000000161561082f576000610824826001610b7e565b835250909392505050565b6107c6565b505060408051600081526020810190915292915050565b60608161088b57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156108b5578061089f81610d83565b91506108ae9050600a83610deb565b915061088f565b60008167ffffffffffffffff8111156108d0576108d061098b565b6040519080825280601f01601f1916602001820160405280156108fa576020820181803683370190505b508593509050815b8015610982578061091281610d1f565b91506109219050600a85610dff565b61092c906030610b7e565b60f81b82828151811061094157610941610d54565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061097b600a85610deb565b9350610902565b50949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff821117156109fe576109fe61098b565b6040525050565b6000610a1060405190565b9050610a1c82826109ba565b919050565b8015155b8114610a3057600080fd5b50565b803561026e81610a21565b80610a25565b803561026e81610a3e565b600060408284031215610a6457610a64600080fd5b610a6e6040610a05565b90506000610a7c8484610a33565b8252506020610a8d84848301610a44565b60208301525092915050565b600060408284031215610aae57610aae600080fd5b6000610aba8484610a4f565b949350505050565b8015155b82525050565b6020810161026e8284610ac2565b80610ac6565b80516040830190610af18482610ac2565b5060208201516107786020850182610ada565b6040810161026e8284610ae0565b60008060808385031215610b2857610b28600080fd5b6000610b348585610a4f565b9250506040610b4585828601610a4f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610b9157610b91610b4f565b500190565b600082821015610ba857610ba8610b4f565b500390565b60005b83811015610bc8578181015183820152602001610bb0565b838111156107785750506000910152565b6000610be3825190565b610bf1818560208601610bad565b9290920192915050565b7fffff0000000000000000000000000000000000000000000000000000000000008116610ac6565b7fff000000000000000000000000000000000000000000000000000000000000008116610ac6565b6000610c578289610bd9565b9150610c638288610bfb565b600282019150610c738287610bd9565b9150610c7f8286610bfb565b600282019150610c8f8285610bd9565b9150610c9b8284610c23565b506001019695505050505050565b6000610cb3825190565b808452602084019350610cca818560208601610bad565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b602080825281016102a88184610ca9565b6000610d168284610ada565b50602001919050565b600081610d2e57610d2e610b4f565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610db557610db5610b4f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610dfa57610dfa610dbc565b500490565b600082610e0e57610e0e610dbc565b50069056fea2646970667358221220425c3b9eb0d773c6de927963eebc079931f92b1936c8454b209076b93314e29b64736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class TestTypes__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestTypes__factory = TestTypes__factory;
TestTypes__factory.bytecode = _bytecode;
TestTypes__factory.abi = _abi;
