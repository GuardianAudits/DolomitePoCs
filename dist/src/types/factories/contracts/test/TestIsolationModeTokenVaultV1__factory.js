"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestIsolationModeTokenVaultV1__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "BORROW_POSITION_PROXY",
        outputs: [
            {
                internalType: "contract IBorrowPositionProxyV2",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "DOLOMITE_MARGIN",
        outputs: [
            {
                internalType: "contract IDolomiteMargin",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "UNDERLYING_TOKEN",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "VAULT_FACTORY",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_toAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_marketId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
        ],
        name: "callDepositOtherTokenIntoDolomiteMarginForVaultOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_borrowAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_toAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "_collateralMarketIds",
                type: "uint256[]",
            },
        ],
        name: "closeBorrowPositionWithOtherTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_borrowAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_toAccountNumber",
                type: "uint256",
            },
        ],
        name: "closeBorrowPositionWithUnderlyingVaultToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_toAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
        ],
        name: "depositIntoVaultForDolomiteMargin",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_from",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "executeDepositIntoVault",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "executeWithdrawalFromVault",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "marketId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_fromAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_toAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
        ],
        name: "openBorrowPosition",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_fromAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_borrowAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_marketId",
                type: "uint256",
            },
            {
                internalType: "enum AccountBalanceLib.BalanceCheckFlag",
                name: "_balanceCheckFlag",
                type: "uint8",
            },
        ],
        name: "repayAllForBorrowPosition",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "_shouldReenter",
                type: "bool",
            },
        ],
        name: "testReentrancy",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_borrowAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_toAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_marketId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
            {
                internalType: "enum AccountBalanceLib.BalanceCheckFlag",
                name: "_balanceCheckFlag",
                type: "uint8",
            },
        ],
        name: "transferFromPositionWithOtherToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_borrowAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_toAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
        ],
        name: "transferFromPositionWithUnderlyingToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_fromAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_borrowAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_marketId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
            {
                internalType: "enum AccountBalanceLib.BalanceCheckFlag",
                name: "_balanceCheckFlag",
                type: "uint8",
            },
        ],
        name: "transferIntoPositionWithOtherToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_fromAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_borrowAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
        ],
        name: "transferIntoPositionWithUnderlyingToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "underlyingBalanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_fromAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
        ],
        name: "withdrawFromVaultForDolomiteMargin",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50612f1c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c8063797b5125116100d8578063b0463d5c1161008c578063f4a2924c11610066578063f4a2924c146102b7578063fa5ff545146102ca578063fa93d69a146102dd57600080fd5b8063b0463d5c1461027e578063bdd019e914610291578063dd4a3c54146102a457600080fd5b80638ddab4e5116100bd5780638ddab4e5146102505780639cd7a1c414610263578063a9f471581461026b57600080fd5b8063797b5125146102355780638129fc1c1461024857600080fd5b806325ffd1361161012f5780632ee3d92f116101145780632ee3d92f146102055780636ed71ede1461020d578063739a09b81461022257600080fd5b806325ffd136146101ea57806329db1be6146101fd57600080fd5b8063103f290711610160578063103f2907146101a457806315c14a4a146101c2578063258aecf6146101d757600080fd5b806304a192cd1461017c5780630d42394114610191575b600080fd5b61018f61018a36600461215e565b6102f0565b005b61018f61019f3660046121d6565b61030f565b6101ac61047d565b6040516101b99190612240565b60405180910390f35b6101ca610502565b6040516101b9919061226d565b61018f6101e536600461227b565b610589565b61018f6101f836600461227b565b6105a4565b6101ac6105b9565b6101ca610608565b610215610657565b6040516101b991906122d1565b61018f61023036600461215e565b6106de565b61018f6102433660046122f3565b6106f5565b61018f6107cc565b61018f61025e3660046122f3565b610823565b61021561085b565b61018f61027936600461227b565b6108b5565b61018f61028c366004612315565b6108ca565b61018f61029f3660046123cb565b6108e7565b61018f6102b236600461227b565b6108fd565b61018f6102c53660046121d6565b610a31565b61018f6102d836600461244c565b610a45565b61018f6102eb3660046121d6565b610ab3565b336102fa81610ac7565b6103078686868686610bc1565b505050505050565b3361031981610ac7565b6103678315157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f496e76616c696420626f72726f774163636f756e744e756d626572000000000086610ca0565b6103b482157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f496e76616c696420746f4163636f756e744e756d62657200000000000000000085610ca0565b604080516001808252818301909252600091602080830190803683370190505090506103de610657565b816000815181106103f1576103f161249c565b602002602001018181525050610405610608565b73ffffffffffffffffffffffffffffffffffffffff1663bef4ed5830863087866040518663ffffffff1660e01b8152600401610445959493929190612528565b600060405180830381600087803b15801561045f57600080fd5b505af1158015610473573d6000803e3d6000fd5b5050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff1663d8a06f736040518163ffffffff1660e01b815260040160206040518083038186803b1580156104c557600080fd5b505afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190612585565b905090565b600061050c61047d565b73ffffffffffffffffffffffffffffffffffffffff166315c14a4a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055157600080fd5b505afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd91906125ba565b3361059381610ac7565b61059e848484610d81565b50505050565b336105ae81610ac7565b61059e848484610e70565b60006105c361047d565b73ffffffffffffffffffffffffffffffffffffffff166329db1be66040518163ffffffff1660e01b815260040160206040518083038186803b1580156104c557600080fd5b600061061261047d565b73ffffffffffffffffffffffffffffffffffffffff16632ee3d92f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055157600080fd5b600061066161047d565b73ffffffffffffffffffffffffffffffffffffffff16636ed71ede6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106a657600080fd5b505afa1580156106ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd91906125e6565b336106e881610ac7565b6103078686868686610f0b565b3361077761070161047d565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16147f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f4f6e6c7920666163746f72792063616e2063616c6c000000000000000000000084610f9f565b73ffffffffffffffffffffffffffffffffffffffff831630141561079d5761079d612607565b6107c783836107aa6105b9565b73ffffffffffffffffffffffffffffffffffffffff169190611001565b505050565b61081c6000546000147f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f416c726561647920696e697469616c697a656400000000000000000000000000611084565b6001600055565b3361082f61070161047d565b6107c783308461083d6105b9565b73ffffffffffffffffffffffffffffffffffffffff169291906110ce565b60006108656105b9565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161089d9190612240565b60206040518083038186803b1580156106a657600080fd5b336108bf81610ac7565b61059e8484846110ef565b336108d481610ac7565b6108e0858585856111b9565b5050505050565b336108f181610ac7565b6108e085858585611259565b6109b6610908610502565b82610911610502565b73ffffffffffffffffffffffffffffffffffffffff1663062bd3e9866040518263ffffffff1660e01b815260040161094991906122d1565b60206040518083038186803b15801561096157600080fd5b505afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109999190612585565b73ffffffffffffffffffffffffffffffffffffffff16919061136d565b6109be61047d565b73ffffffffffffffffffffffffffffffffffffffff16633c939dc18484846040518463ffffffff1660e01b81526004016109fa93929190612636565b600060405180830381600087803b158015610a1457600080fd5b505af1158015610a28573d6000803e3d6000fd5b50505050505050565b33610a3b81610ac7565b6107c78383611470565b610a96600260005414157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f5265656e7472616e742063616c6c000000000000000000000000000000000000611084565b60026000558015610aab57610aab6000610a45565b506001600055565b33610abd8161152d565b6107c78383611661565b610bbe3073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1057600080fd5b505afa158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b489190612585565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16147f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f4f6e6c79206f776e65722063616e2063616c6c0000000000000000000000000084610f9f565b50565b610c17610bcc610657565b8414157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f496e76616c6964206d61726b657449640000000000000000000000000000000086610ca0565b610c1f610608565b73ffffffffffffffffffffffffffffffffffffffff166324bc3240338730888888886040518863ffffffff1660e01b8152600401610c6397969594939291906126c0565b600060405180830381600087803b158015610c7d57600080fd5b505af1158015610c91573d6000803e3d6000fd5b505050506108e03085856116f0565b8361059e57610cae836118ee565b7f3a20000000000000000000000000000000000000000000000000000000000000610cd8846118ee565b7f203c000000000000000000000000000000000000000000000000000000000000610d02856119a1565b604051610d389594939291907f3e00000000000000000000000000000000000000000000000000000000000000906020016127c6565b60408051601f19818403018152908290527f08c379a0000000000000000000000000000000000000000000000000000000008252610d7891600401612856565b60405180910390fd5b610dce83157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f496e76616c69642066726f6d4163636f756e744e756d6265720000000000000086610ca0565b610e1c8215157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f496e76616c696420626f72726f774163636f756e744e756d626572000000000085610ca0565b610e24610608565b73ffffffffffffffffffffffffffffffffffffffff166324bc324030853086610e4b610657565b8760006040518863ffffffff1660e01b81526004016109fa97969594939291906126c0565b610ebe8315157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f496e76616c696420626f72726f774163636f756e744e756d626572000000000086610ca0565b610e1c82157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f496e76616c696420746f4163636f756e744e756d62657200000000000000000085610ca0565b610f16610bcc610657565b610f1e610608565b73ffffffffffffffffffffffffffffffffffffffff166324bc3240308733888888886040518863ffffffff1660e01b8152600401610f6297969594939291906126c0565b600060405180830381600087803b158015610f7c57600080fd5b505af1158015610f90573d6000803e3d6000fd5b505050506108e0308685611ae1565b8361059e57610fad836118ee565b7f3a20000000000000000000000000000000000000000000000000000000000000610fd7846118ee565b7f203c000000000000000000000000000000000000000000000000000000000000610d0285611cdf565b6107c78363a9059cbb60e01b8484604051602401611020929190612867565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e92565b826107c757611092826118ee565b7f3a200000000000000000000000000000000000000000000000000000000000006110bc836118ee565b604051602001610d3893929190612882565b61059e846323b872dd60e01b858585604051602401611020939291906128b3565b61113c83157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f496e76616c69642066726f6d4163636f756e744e756d6265720000000000000086610ca0565b61118a8215157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f496e76616c696420746f4163636f756e744e756d62657200000000000000000085610ca0565b611192610608565b73ffffffffffffffffffffffffffffffffffffffff1663c2a4240730853086610e4b610657565b61120f6111c4610657565b8314157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f496e76616c6964206d61726b657449640000000000000000000000000000000085610ca0565b611217610608565b73ffffffffffffffffffffffffffffffffffffffff1663045673763386308787876040518763ffffffff1660e01b8152600401610445969594939291906128ce565b6000611263610657565b905060005b828110156112e9576112d7828585848181106112865761128661249c565b9050602002013514157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f43616e6e6f74207769746864726177206d61726b657420746f2077616c6c657485610ca0565b806112e18161294c565b915050611268565b506112f2610608565b73ffffffffffffffffffffffffffffffffffffffff1663bef4ed583087338888886040518763ffffffff1660e01b8152600401611334969594939291906129e3565b600060405180830381600087803b15801561134e57600080fd5b505af1158015611362573d6000803e3d6000fd5b505050505050505050565b80158061141b57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063dd62ed3e906113c99030908690600401612a2b565b60206040518083038186803b1580156113e157600080fd5b505afa1580156113f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141991906125e6565b155b611451576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7890612aa3565b6107c78363095ea7b360e01b8484604051602401611020929190612867565b6114bd82157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f496e76616c69642066726f6d4163636f756e744e756d6265720000000000000085610ca0565b6114c561047d565b73ffffffffffffffffffffffffffffffffffffffff166395b5b19683836040518363ffffffff1660e01b81526004016114ff929190612ab3565b600060405180830381600087803b15801561151957600080fd5b505af1158015610307573d6000803e3d6000fd5b610bbe3073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561157657600080fd5b505afa15801561158a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ae9190612585565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061161957506115ea61047d565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b7f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f4f6e6c79206f776e6572206f7220666163746f72792063616e2063616c6c000084610f9f565b6116ae82157f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f496e76616c696420746f4163636f756e744e756d62657200000000000000000085610ca0565b6116b661047d565b73ffffffffffffffffffffffffffffffffffffffff1663516885be83836040518363ffffffff1660e01b81526004016114ff929190612ab3565b60006116fa610502565b73ffffffffffffffffffffffffffffffffffffffff166347d1b53c60405180604001604052808773ffffffffffffffffffffffffffffffffffffffff16815260200186815250846040518363ffffffff1660e01b815260040161175e929190612ae5565b604080518083038186803b15801561177557600080fd5b505afa158015611789573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ad9190612b99565b90506117b881611f48565b1561059e5760006117c761047d565b905060008173ffffffffffffffffffffffffffffffffffffffff166389c32efb6040518163ffffffff1660e01b815260040160006040518083038186803b15801561181157600080fd5b505afa158015611825573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261184d9190810190612c62565b90508051600014610307576000805b82518110156118a157858382815181106118785761187861249c565b6020026020010151141561188f57600191506118a1565b806118998161294c565b91505061185c565b50610a28817f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f4d61726b6574206e6f7420616c6c6f77656420617320636f6c6c61746572616c88610ca0565b60606000826040516020016119039190612c9d565b60408051601f19818403018152919052905060205b8015611986578061192881612cb2565b91505081818151811061193d5761193d61249c565b01602001517fff000000000000000000000000000000000000000000000000000000000000001615611981576000611976826001612ce7565b835250909392505050565b611918565b5060408051600080825260208201909252905b509392505050565b6060816119e157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611a0b57806119f58161294c565b9150611a049050600a83612d2e565b91506119e5565b60008167ffffffffffffffff811115611a2657611a2661246d565b6040519080825280601f01601f191660200182016040528015611a50576020820181803683370190505b508593509050815b8015611ad85780611a6881612cb2565b9150611a779050600a85612d42565b611a82906030612ce7565b60f81b828281518110611a9757611a9761249c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611ad1600a85612d2e565b9350611a58565b50949350505050565b6000611aeb610502565b73ffffffffffffffffffffffffffffffffffffffff166347d1b53c60405180604001604052808773ffffffffffffffffffffffffffffffffffffffff16815260200186815250846040518363ffffffff1660e01b8152600401611b4f929190612ae5565b604080518083038186803b158015611b6657600080fd5b505afa158015611b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9e9190612b99565b9050611ba981611f63565b1561059e576000611bb861047d565b905060008173ffffffffffffffffffffffffffffffffffffffff1663037ec8c86040518163ffffffff1660e01b815260040160006040518083038186803b158015611c0257600080fd5b505afa158015611c16573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c3e9190810190612c62565b90508051600014610307576000805b8251811015611c925785838281518110611c6957611c6961249c565b60200260200101511415611c805760019150611c92565b80611c8a8161294c565b915050611c4d565b50610a28817f49736f6c6174696f6e4d6f6465546f6b656e5661756c745631000000000000007f4d61726b6574206e6f7420616c6c6f776564206173206465627400000000000088610ca0565b60408051602a808252606082810190935273ffffffffffffffffffffffffffffffffffffffff841691600091602082018180368337019050509050603060f81b81600081518110611d3257611d3261249c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350607860f81b81600181518110611d7957611d7961249c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b6014811015611999576000611dc1826002612d56565b9050611dcf600f8516611f7a565b83611ddb836029612d93565b81518110611deb57611deb61249c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600484901c9350611e2d600f8516611f7a565b83611e39836028612d93565b81518110611e4957611e4961249c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505060049290921c9180611e8a8161294c565b915050611dab565b6000611ef4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611fa49092919063ffffffff16565b8051909150156107c75780806020019051810190611f129190612daa565b6107c7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7890612e25565b80516000908015611f5d575060008260200151115b92915050565b8051600090158015611f5d57505060200151151590565b6000600a821015611f9957611f90603083612ce7565b60f81b92915050565b611f90605783612ce7565b6060611fb38484600085611fbd565b90505b9392505050565b606082471015611ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7890612e8f565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516120229190612e9f565b60006040518083038185875af1925050503d806000811461205f576040519150601f19603f3d011682016040523d82523d6000602084013e612064565b606091505b509150915061207587838387612082565b925050505b949350505050565b606083156120e55782516120de5773ffffffffffffffffffffffffffffffffffffffff85163b6120de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7890612eab565b508161207a565b61207a83838151156120fa5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d789190612856565b805b8114610bbe57600080fd5b8035611f5d8161212e565b60048110610bbe57600080fd5b8035611f5d81612146565b600080600080600060a0868803121561217957612179600080fd5b6000612185888861213b565b95505060206121968882890161213b565b94505060406121a78882890161213b565b93505060606121b88882890161213b565b92505060806121c988828901612153565b9150509295509295909350565b600080604083850312156121ec576121ec600080fd5b60006121f8858561213b565b92505060206122098582860161213b565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff8216611f5d565b61223a81612213565b82525050565b60208101611f5d8284612231565b6000611f5d82612213565b6000611f5d8261224e565b61223a81612259565b60208101611f5d8284612264565b60008060006060848603121561229357612293600080fd5b600061229f868661213b565b93505060206122b08682870161213b565b92505060406122c18682870161213b565b9150509250925092565b8061223a565b60208101611f5d82846122cb565b61213081612213565b8035611f5d816122df565b6000806040838503121561230957612309600080fd5b60006121f885856122e8565b6000806000806080858703121561232e5761232e600080fd5b600061233a878761213b565b945050602061234b8782880161213b565b935050604061235c8782880161213b565b925050606061236d87828801612153565b91505092959194509250565b60008083601f84011261238e5761238e600080fd5b50813567ffffffffffffffff8111156123a9576123a9600080fd5b6020830191508360208202830111156123c4576123c4600080fd5b9250929050565b600080600080606085870312156123e4576123e4600080fd5b60006123f0878761213b565b94505060206124018782880161213b565b935050604085013567ffffffffffffffff81111561242157612421600080fd5b61242d87828801612379565b95989497509550505050565b801515612130565b8035611f5d81612439565b60006020828403121561246157612461600080fd5b600061207a8484612441565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006124d783836122cb565b505060200190565b60006124e9825190565b80845260209384019383018060005b8381101561251d57815161250c88826124cb565b9750602083019250506001016124f8565b509495945050505050565b60a081016125368288612231565b61254360208301876122cb565b6125506040830186612231565b61255d60608301856122cb565b818103608083015261256f81846124df565b979650505050505050565b8051611f5d816122df565b60006020828403121561259a5761259a600080fd5b600061207a848461257a565b6121308161224e565b8051611f5d816125a6565b6000602082840312156125cf576125cf600080fd5b600061207a84846125af565b8051611f5d8161212e565b6000602082840312156125fb576125fb600080fd5b600061207a84846125db565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6060810161264482866122cb565b61265160208301856122cb565b61207a60408301846122cb565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610bbe57610bbe61265e565b806126a78161268d565b919050565b6000611f5d8261269d565b61223a816126ac565b60e081016126ce828a612231565b6126db60208301896122cb565b6126e86040830188612231565b6126f560608301876122cb565b61270260808301866122cb565b61270f60a08301856122cb565b61271c60c08301846126b7565b98975050505050505050565b60005b8381101561274357818101518382015260200161272b565b8381111561059e5750506000910152565b600061275e825190565b61276c818560208601612728565b9290920192915050565b7fffff000000000000000000000000000000000000000000000000000000000000811661223a565b7fff00000000000000000000000000000000000000000000000000000000000000811661223a565b60006127d28289612754565b91506127de8288612776565b6002820191506127ee8287612754565b91506127fa8286612776565b60028201915061280a8285612754565b9150612816828461279e565b506001019695505050505050565b600061282e825190565b808452602084019350612845818560208601612728565b601f01601f19169290920192915050565b60208082528101611fb68184612824565b604081016128758285612231565b611fb660208301846122cb565b600061288e8286612754565b915061289a8285612776565b6002820191506128aa8284612754565b95945050505050565b606081016128c18286612231565b6126516020830185612231565b60c081016128dc8289612231565b6128e960208301886122cb565b6128f66040830187612231565b61290360608301866122cb565b61291060808301856122cb565b61256f60a08301846126b7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561297e5761297e61291d565b5060010190565b82818337506000910152565b81835260006020840193507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156129cc576129cc600080fd5b6020830292506129dd838584612985565b50500190565b60a081016129f18289612231565b6129fe60208301886122cb565b612a0b6040830187612231565b612a1860608301866122cb565b818103608083015261271c818486612991565b60408101612a398285612231565b611fb66020830184612231565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015291505b5060400190565b60208082528101611f5d81612a46565b6040810161287582856122cb565b80516040830190612ad28482612231565b50602082015161059e60208501826122cb565b60608101612af38285612ac1565b611fb660408301846122cb565b601f19601f830116810181811067ffffffffffffffff82111715612b2657612b2661246d565b6040525050565b6000612b3860405190565b90506126a78282612b00565b8051611f5d81612439565b600060408284031215612b6457612b64600080fd5b612b6e6040612b2d565b90506000612b7c8484612b44565b8252506020612b8d848483016125db565b60208301525092915050565b600060408284031215612bae57612bae600080fd5b600061207a8484612b4f565b600067ffffffffffffffff821115612bd457612bd461246d565b5060209081020190565b6000612bf1612bec84612bba565b612b2d565b83815290506020808201908402830185811115612c1057612c10600080fd5b835b81811015612c345780612c2588826125db565b84525060209283019201612c12565b5050509392505050565b600082601f830112612c5257612c52600080fd5b815161207a848260208601612bde565b600060208284031215612c7757612c77600080fd5b815167ffffffffffffffff811115612c9157612c91600080fd5b61207a84828501612c3e565b6000612ca982846122cb565b50602001919050565b600081612cc157612cc161291d565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60008219821115612cfa57612cfa61291d565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612d3d57612d3d612cff565b500490565b600082612d5157612d51612cff565b500690565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612d8e57612d8e61291d565b500290565b600082821015612da557612da561291d565b500390565b600060208284031215612dbf57612dbf600080fd5b600061207a8484612b44565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e81527f6f7420737563636565640000000000000000000000000000000000000000000060208201529150612a9c565b60208082528101611f5d81612dcb565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f81527f722063616c6c000000000000000000000000000000000000000000000000000060208201529150612a9c565b60208082528101611f5d81612e35565b6000611fb68284612754565b60208082528101611f5d81601d81527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060208201526040019056fea2646970667358221220f301db9067bb7c68a0b3bee2da704428ca96033978f1e209f5a2845b3889410164736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class TestIsolationModeTokenVaultV1__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestIsolationModeTokenVaultV1__factory = TestIsolationModeTokenVaultV1__factory;
TestIsolationModeTokenVaultV1__factory.bytecode = _bytecode;
TestIsolationModeTokenVaultV1__factory.abi = _abi;
