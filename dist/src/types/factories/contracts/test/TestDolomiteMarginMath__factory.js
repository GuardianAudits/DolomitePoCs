"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestDolomiteMarginMath__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "target",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "numerator",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "denominator",
                type: "uint256",
            },
        ],
        name: "DolomiteMarginMathGetPartial",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "target",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "numerator",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "denominator",
                type: "uint256",
            },
        ],
        name: "DolomiteMarginMathGetPartialRoundHalfUp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "target",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "numerator",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "denominator",
                type: "uint256",
            },
        ],
        name: "DolomiteMarginMathGetPartialRoundUp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
        ],
        name: "DolomiteMarginMathTo128",
        outputs: [
            {
                internalType: "uint128",
                name: "",
                type: "uint128",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
        ],
        name: "DolomiteMarginMathTo32",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
        ],
        name: "DolomiteMarginMathTo96",
        outputs: [
            {
                internalType: "uint96",
                name: "",
                type: "uint96",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610aa0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80637d78593d116100505780637d78593d146100d35780637ffc1935146100e6578063cc5a71731461010657600080fd5b80632652670814610077578063317f837f146100a0578063414744f7146100b3575b600080fd5b61008a610085366004610643565b610126565b604051610097919061069b565b60405180910390f35b61008a6100ae366004610643565b61013d565b6100c66100c13660046106a9565b61014a565b60405161009791906106e6565b61008a6100e1366004610643565b61015b565b6100f96100f43660046106a9565b610168565b604051610097919061070c565b6101196101143660046106a9565b610173565b6040516100979190610726565b600061013384848461017e565b90505b9392505050565b6000610133848484610195565b6000610155826101cf565b92915050565b600061013384848461022e565b600061015582610274565b6000610155826102d7565b60008161018b8486610763565b61013391906107cf565b60008315806101a2575082155b156101af57506000610136565b816101bb6002826107cf565b6101c58587610763565b61018b91906107e3565b6000816101556bffffffffffffffffffffffff821682147f446f6c6f6d6974654d617267696e4d61746800000000000000000000000000007f556e73616665206361737420746f2075696e74393600000000000000000000008461032a565b600083158061023b575082155b1561024857506000610136565b8160016102558587610763565b61025f91906107fb565b61026991906107cf565b6101339060016107e3565b6000816101556fffffffffffffffffffffffffffffffff821682147f446f6c6f6d6974654d617267696e4d61746800000000000000000000000000007f556e73616665206361737420746f2075696e74313238000000000000000000008461032a565b60008161015563ffffffff821682147f446f6c6f6d6974654d617267696e4d61746800000000000000000000000000007f556e73616665206361737420746f2075696e7433320000000000000000000000845b83610429576103388361042f565b7f3a200000000000000000000000000000000000000000000000000000000000006103628461042f565b7f203c00000000000000000000000000000000000000000000000000000000000061038c856104fc565b6040516103c29594939291907f3e00000000000000000000000000000000000000000000000000000000000000906020016108b0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526104209160040161095e565b60405180910390fd5b50505050565b60606000826040516020016104449190610975565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060205b80156104e557806104878161098a565b91505081818151811061049c5761049c6109bf565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016156104e05760006104d58260016107e3565b835250909392505050565b610477565b505060408051600081526020810190915292915050565b60608161053c57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610566578061055081610a1d565b915061055f9050600a836107cf565b9150610540565b60008167ffffffffffffffff811115610581576105816109ee565b6040519080825280601f01601f1916602001820160405280156105ab576020820181803683370190505b508593509050815b801561063357806105c38161098a565b91506105d29050600a85610a56565b6105dd9060306107e3565b60f81b8282815181106105f2576105f26109bf565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061062c600a856107cf565b93506105b3565b50949350505050565b8035610155565b60008060006060848603121561065b5761065b600080fd5b6000610667868661063c565b93505060206106788682870161063c565b92505060406106898682870161063c565b9150509250925092565b805b82525050565b602081016101558284610693565b6000602082840312156106be576106be600080fd5b60006106ca848461063c565b949350505050565b6bffffffffffffffffffffffff8116610695565b6020810161015582846106d2565b6fffffffffffffffffffffffffffffffff8116610695565b6020810161015582846106f4565b63ffffffff8116610695565b60208101610155828461071a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561079b5761079b610734565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826107de576107de6107a0565b500490565b600082198211156107f6576107f6610734565b500190565b60008282101561080d5761080d610734565b500390565b60005b8381101561082d578181015183820152602001610815565b838111156104295750506000910152565b6000610848825190565b610856818560208601610812565b9290920192915050565b7fffff0000000000000000000000000000000000000000000000000000000000008116610695565b7fff000000000000000000000000000000000000000000000000000000000000008116610695565b60006108bc828961083e565b91506108c88288610860565b6002820191506108d8828761083e565b91506108e48286610860565b6002820191506108f4828561083e565b91506109008284610888565b506001019695505050505050565b6000610918825190565b80845260208401935061092f818560208601610812565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b60208082528101610136818461090e565b80610695565b6000610981828461096f565b50602001919050565b60008161099957610999610734565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a4f57610a4f610734565b5060010190565b600082610a6557610a656107a0565b50069056fea2646970667358221220907f7728e2312792b705887d0cef6dd271541d9e33b9a7e48911a692de9e19b264736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class TestDolomiteMarginMath__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestDolomiteMarginMath__factory = TestDolomiteMarginMath__factory;
TestDolomiteMarginMath__factory.bytecode = _bytecode;
TestDolomiteMarginMath__factory.abi = _abi;
