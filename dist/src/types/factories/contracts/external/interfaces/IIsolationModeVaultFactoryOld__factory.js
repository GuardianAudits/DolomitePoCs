"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IIsolationModeVaultFactoryOld__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "BORROW_POSITION_PROXY",
        outputs: [
            {
                internalType: "contract IBorrowPositionProxyV2",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "DOLOMITE_MARGIN",
        outputs: [
            {
                internalType: "contract IDolomiteMargin",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "NONE",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "UNDERLYING_TOKEN",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "allowableCollateralMarketIds",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "allowableDebtMarketIds",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "calculateVaultByAccount",
        outputs: [
            {
                internalType: "address",
                name: "_vault",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "createVault",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_toAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
        ],
        name: "createVaultAndDepositIntoDolomiteMargin",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_toAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
        ],
        name: "depositIntoDolomiteMargin",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_toAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_marketId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
        ],
        name: "depositOtherTokenIntoDolomiteMarginForVaultOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_vault",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
        ],
        name: "enqueueTransferFromDolomiteMargin",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_vault",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
        ],
        name: "enqueueTransferIntoDolomiteMargin",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_vault",
                type: "address",
            },
        ],
        name: "getAccountByVault",
        outputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getProxyVaultInitCodeHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_transferCursor",
                type: "uint256",
            },
        ],
        name: "getQueuedTransferByCursor",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "from",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "vault",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "isExecuted",
                        type: "bool",
                    },
                ],
                internalType: "struct IIsolationModeVaultFactoryOld.QueuedTransfer",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "getVaultByAccount",
        outputs: [
            {
                internalType: "address",
                name: "_vault",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_tokenConverters",
                type: "address[]",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "isIsolationAsset",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenConverter",
                type: "address",
            },
        ],
        name: "isTokenConverterTrusted",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "marketId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenConverter",
                type: "address",
            },
            {
                internalType: "bool",
                name: "_isTrusted",
                type: "bool",
            },
        ],
        name: "setIsTokenConverterTrusted",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_userVaultImplementation",
                type: "address",
            },
        ],
        name: "setUserVaultImplementation",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "userVaultImplementation",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_fromAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountWei",
                type: "uint256",
            },
        ],
        name: "withdrawFromDolomiteMargin",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IIsolationModeVaultFactoryOld__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IIsolationModeVaultFactoryOld__factory = IIsolationModeVaultFactoryOld__factory;
IIsolationModeVaultFactoryOld__factory.abi = _abi;
