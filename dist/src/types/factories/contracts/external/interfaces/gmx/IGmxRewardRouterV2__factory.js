"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IGmxRewardRouterV2__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_sender",
                type: "address",
            },
        ],
        name: "acceptTransfer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "_shouldClaimGmx",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_shouldStakeGmx",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_shouldClaimEsGmx",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_shouldStakeEsGmx",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_shouldStakeMultiplierPoints",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_shouldClaimWeth",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_shouldConvertWethToEth",
                type: "bool",
            },
        ],
        name: "handleRewards",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_sender",
                type: "address",
            },
        ],
        name: "pendingReceivers",
        outputs: [
            {
                internalType: "address",
                name: "_receiver",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_receiver",
                type: "address",
            },
        ],
        name: "signalTransfer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "stakeEsGmx",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "stakeGmx",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "unstakeEsGmx",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "unstakeGmx",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IGmxRewardRouterV2__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IGmxRewardRouterV2__factory = IGmxRewardRouterV2__factory;
IGmxRewardRouterV2__factory.abi = _abi;
