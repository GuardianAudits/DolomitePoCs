"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IGenericTraderProxyV1__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "EXPIRY",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MARGIN_POSITION_REGISTRY",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_tradeAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "_marketIdsPath",
                type: "uint256[]",
            },
            {
                internalType: "uint256[]",
                name: "_amountWeisPath",
                type: "uint256[]",
            },
            {
                components: [
                    {
                        internalType: "enum IGenericTraderBase.TraderType",
                        name: "traderType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "makerAccountIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "bytes",
                        name: "tradeData",
                        type: "bytes",
                    },
                ],
                internalType: "struct IGenericTraderBase.TraderParam[]",
                name: "_tradersPath",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "owner",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "number",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.AccountInfo[]",
                name: "_makerAccounts",
                type: "tuple[]",
            },
        ],
        name: "swapExactInputForOutput",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_tradeAccountNumber",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "_marketIdsPath",
                type: "uint256[]",
            },
            {
                internalType: "uint256[]",
                name: "_amountWeisPath",
                type: "uint256[]",
            },
            {
                components: [
                    {
                        internalType: "enum IGenericTraderBase.TraderType",
                        name: "traderType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "makerAccountIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "bytes",
                        name: "tradeData",
                        type: "bytes",
                    },
                ],
                internalType: "struct IGenericTraderBase.TraderParam[]",
                name: "_tradersPath",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "owner",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "number",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.AccountInfo[]",
                name: "_makerAccounts",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "fromAccountNumber",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "toAccountNumber",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "marketId",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "amountWei",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct IGenericTraderProxyV1.TransferAmount[]",
                        name: "transferAmounts",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct IGenericTraderProxyV1.TransferCollateralParam",
                name: "_transferCollateralParams",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "marketId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint32",
                        name: "expiryTimeDelta",
                        type: "uint32",
                    },
                ],
                internalType: "struct IGenericTraderProxyV1.ExpiryParam",
                name: "_expiryParams",
                type: "tuple",
            },
        ],
        name: "swapExactInputForOutputAndModifyPosition",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IGenericTraderProxyV1__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IGenericTraderProxyV1__factory = IGenericTraderProxyV1__factory;
IGenericTraderProxyV1__factory.abi = _abi;
