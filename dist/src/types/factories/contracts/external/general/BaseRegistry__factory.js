"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseRegistry__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_dolomiteRegistry",
                type: "address",
            },
        ],
        name: "DolomiteRegistrySet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        inputs: [],
        name: "DOLOMITE_MARGIN",
        outputs: [
            {
                internalType: "contract IDolomiteMargin",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "dolomiteRegistry",
        outputs: [
            {
                internalType: "contract IDolomiteRegistry",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_dolomiteRegistry",
                type: "address",
            },
        ],
        name: "ownerSetDolomiteRegistry",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610c68806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806315c14a4a14610046578063bd12584f14610064578063ffd1271b1461006c575b600080fd5b61004e610081565b60405161005b9190610860565b60405180910390f35b61004e6100ba565b61007f61007a3660046108ae565b6100ea565b005b60006100b56100b160017f01095cd170b13c49f67c675e3bc004094df00c531fa118e86b230655aba7aa17610906565b5490565b905090565b60006100b56100b160017f12525b307d8d9fd813165be18b676c012a1c9861f010452b12618f637a593b2a610906565b336101e96100f6610081565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561013b57600080fd5b505afa15801561014f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101739190610928565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16147f4f6e6c79446f6c6f6d6974654d617267696e00000000000000000000000000007f43616c6c6572206973206e6f74206f776e6572206f6620446f6c6f6d69746500846101f6565b6101f2826102fb565b5050565b836102f55761020483610410565b7f3a2000000000000000000000000000000000000000000000000000000000000061022e84610410565b7f203c000000000000000000000000000000000000000000000000000000000000610258856104e1565b60405161028e9594939291907f3e00000000000000000000000000000000000000000000000000000000000000906020016109e7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526102ec91600401610a95565b60405180910390fd5b50505050565b61035e73ffffffffffffffffffffffffffffffffffffffff821615157f42617365526567697374727900000000000000000000000000000000000000007f496e76616c696420646f6c6f6d69746552656769737472790000000000000000610694565b600061038182632f32699960e01b604051806020016040528060008152506106e3565b9050808060200190518101906103979190610928565b506103cb6103c660017f12525b307d8d9fd813165be18b676c012a1c9861f010452b12618f637a593b2a610906565b839055565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fd4968e6ff4b2df084b2b71aa90bc2137eee816091d7f1c17f0b66a602f9dbaeb90600090a25050565b60606000826040516020016104259190610ab3565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060205b80156104c6578061046881610ac8565b91505081818151811061047d5761047d610afd565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016156104c15760006104b6826001610b2c565b835250909392505050565b610458565b5060408051600080825260208201909252905b509392505050565b60408051602a808252606082810190935273ffffffffffffffffffffffffffffffffffffffff841691600091602082018180368337019050509050603060f81b8160008151811061053457610534610afd565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350607860f81b8160018151811061057b5761057b610afd565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b60148110156104d95760006105c3826002610b44565b90506105d1600f85166107f1565b836105dd836029610906565b815181106105ed576105ed610afd565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600484901c935061062f600f85166107f1565b8361063b836028610906565b8151811061064b5761064b610afd565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505060049290921c918061068c81610b81565b9150506105ad565b826106de576106a282610410565b7f3a200000000000000000000000000000000000000000000000000000000000006106cc83610410565b60405160200161028e93929190610bba565b505050565b60606000808573ffffffffffffffffffffffffffffffffffffffff168585604051602001610712929190610c0a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261074a91610c26565b600060405180830381855afa9150503d8060008114610785576040519150601f19603f3d011682016040523d82523d6000602084013e61078a565b606091505b50915091506107e88280156107a0575060008251115b7f56616c69646174696f6e4c6962000000000000000000000000000000000000007f43616c6c20746f20746172676574206661696c65640000000000000000000000896101f6565b95945050505050565b6000600a82101561081057610807603083610b2c565b60f81b92915050565b610807605783610b2c565b600073ffffffffffffffffffffffffffffffffffffffff82165b92915050565b60006108358261081b565b60006108358261083b565b61085a81610846565b82525050565b602081016108358284610851565b600073ffffffffffffffffffffffffffffffffffffffff8216610835565b6108958161086e565b81146108a057600080fd5b50565b80356108358161088c565b6000602082840312156108c3576108c3600080fd5b60006108cf84846108a3565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610918576109186108d7565b500390565b80516108358161088c565b60006020828403121561093d5761093d600080fd5b60006108cf848461091d565b60005b8381101561096457818101518382015260200161094c565b838111156102f55750506000910152565b600061097f825190565b61098d818560208601610949565b9290920192915050565b7fffff000000000000000000000000000000000000000000000000000000000000811661085a565b7fff00000000000000000000000000000000000000000000000000000000000000811661085a565b60006109f38289610975565b91506109ff8288610997565b600282019150610a0f8287610975565b9150610a1b8286610997565b600282019150610a2b8285610975565b9150610a3782846109bf565b506001019695505050505050565b6000610a4f825190565b808452602084019350610a66818560208601610949565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b60208082528101610aa68184610a45565b9392505050565b8061085a565b6000610abf8284610aad565b50602001919050565b600081610ad757610ad76108d7565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008219821115610b3f57610b3f6108d7565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b7c57610b7c6108d7565b500290565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bb357610bb36108d7565b5060010190565b6000610bc68286610975565b9150610bd28285610997565b6002820191506107e88284610975565b7fffffffff00000000000000000000000000000000000000000000000000000000811661085a565b6000610c168285610be2565b6004820191506108cf8284610975565b6000610aa6828461097556fea2646970667358221220c0c66495715aaf49dfdc9a1ab8b1e57f8e27df3bc79a0ced7535e6a4d391cdda64736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class BaseRegistry__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.BaseRegistry__factory = BaseRegistry__factory;
BaseRegistry__factory.bytecode = _bytecode;
BaseRegistry__factory.abi = _abi;
