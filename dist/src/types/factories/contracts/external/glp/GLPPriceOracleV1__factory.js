"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GLPPriceOracleV1__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_gmxRegistry",
                type: "address",
            },
            {
                internalType: "address",
                name: "_dsGlp",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "DFS_GLP",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "FEE_PRECISION",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "GLP_PRECISION",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "GMX_REGISTRY",
        outputs: [
            {
                internalType: "contract IGmxRegistryV1",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_token",
                type: "address",
            },
        ],
        name: "getPrice",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                ],
                internalType: "struct IDolomiteStructs.MonetaryPrice",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "glp",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "glpManager",
        outputs: [
            {
                internalType: "contract IGLPManager",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "gmxVault",
        outputs: [
            {
                internalType: "contract IGmxVault",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60c060405234801561001057600080fd5b50604051610cd8380380610cd883398101604081905261002f9161007b565b6001600160a01b0391821660a052166080526100b8565b60006001600160a01b0382165b92915050565b61006281610046565b811461006d57600080fd5b50565b805161005381610059565b6000806040838503121561009157610091600080fd5b600061009d8585610070565b92505060206100ae85828601610070565b9150509250929050565b60805160a051610be06100f86000396000818161011b01528181610215015281816102ba015261032201526000818160f401526101620152610be06000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b62815bf1161005b578063b62815bf146100ef578063ba1fc25e14610116578063e63a391f1461013d578063fa6db1bc1461014657600080fd5b806341976e091461008d578063662f1c68146100b657806378a207ee146100d2578063b3b3453e146100e7575b600080fd5b6100a061009b3660046107d8565b61014e565b6040516100ad9190610820565b60405180910390f35b6100c5670de0b6b3a764000081565b6040516100ad919061082e565b6100da610211565b6040516100ad9190610879565b6100da6102b6565b6100da7f000000000000000000000000000000000000000000000000000000000000000081565b6100da7f000000000000000000000000000000000000000000000000000000000000000081565b6100c561271081565b6100da61031e565b6040805160208101909152600081526101f67f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16147f474c5050726963654f7261636c655631000000000000000000000000000000007f696e76616c696420746f6b656e00000000000000000000000000000000000000610386565b604051806020016040528061020961043c565b905292915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166378a207ee6040518163ffffffff1660e01b815260040160206040518083038186803b15801561027957600080fd5b505afa15801561028d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b191906108a6565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b3b3453e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561027957600080fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663fa6db1bc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561027957600080fd5b8261043757610394826106c9565b7f3a200000000000000000000000000000000000000000000000000000000000006103be836106c9565b6040516020016103d09392919061093d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261042e916004016109be565b60405180910390fd5b505050565b6000806104476102b6565b905060008173ffffffffffffffffffffffffffffffffffffffff16637a210a2b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049157600080fd5b505afa1580156104a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c991906109e7565b8273ffffffffffffffffffffffffffffffffffffffff16634d47b3046040518163ffffffff1660e01b815260040160206040518083038186803b15801561050f57600080fd5b505afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054791906109e7565b6105519190610a37565b9050600061055d610211565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105a257600080fd5b505afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da91906109e7565b9050600081116105ec576105ec610a4f565b600081670de0b6b3a764000061060061031e565b73ffffffffffffffffffffffffffffffffffffffff166368a0a3e060006040518263ffffffff1660e01b81526004016106399190610a86565b60206040518083038186803b15801561065157600080fd5b505afa158015610665573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068991906109e7565b6106939190610a94565b61069d9190610b00565b90506127106106ac8483610a94565b6106b69190610b00565b6106c09082610b14565b94505050505090565b60606000826040516020016106de9190610b31565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060205b801561077f578061072181610b46565b91505081818151811061073657610736610b7b565b01602001517fff00000000000000000000000000000000000000000000000000000000000000161561077a57600061076f826001610a37565b835250909392505050565b610711565b505060408051600081526020810190915292915050565b600073ffffffffffffffffffffffffffffffffffffffff82165b92915050565b6107bf81610796565b81146107ca57600080fd5b50565b80356107b0816107b6565b6000602082840312156107ed576107ed600080fd5b60006107f984846107cd565b949350505050565b805b82525050565b8051602083019061081a8482610801565b50505050565b602081016107b08284610809565b602081016107b08284610801565b600073ffffffffffffffffffffffffffffffffffffffff82166107b0565b60006107b08261083c565b60006107b08261085a565b61080381610865565b602081016107b08284610870565b60006107b082610796565b6107bf81610887565b80516107b081610892565b6000602082840312156108bb576108bb600080fd5b60006107f9848461089b565b60005b838110156108e25781810151838201526020016108ca565b8381111561081a5750506000910152565b60006108fd825190565b61090b8185602086016108c7565b9290920192915050565b7fffff0000000000000000000000000000000000000000000000000000000000008116610803565b600061094982866108f3565b91506109558285610915565b60028201915061096582846108f3565b95945050505050565b6000610978825190565b80845260208401935061098f8185602086016108c7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b602080825281016109cf818461096e565b9392505050565b806107bf565b80516107b0816109d6565b6000602082840312156109fc576109fc600080fd5b60006107f984846109dc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610a4a57610a4a610a08565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b801515610803565b602081016107b08284610a7e565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610acc57610acc610a08565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610b0f57610b0f610ad1565b500490565b600082821015610b2657610b26610a08565b500390565b80610803565b6000610b3d8284610b2b565b50602001919050565b600081610b5557610b55610a08565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212200aa940b48b640ca6124f17d9f5387c6f9e35d588bdf2b33d2a8c8494fd38a3fd64736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class GLPPriceOracleV1__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_gmxRegistry, _dsGlp, overrides) {
        return super.deploy(_gmxRegistry, _dsGlp, overrides || {});
    }
    getDeployTransaction(_gmxRegistry, _dsGlp, overrides) {
        return super.getDeployTransaction(_gmxRegistry, _dsGlp, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.GLPPriceOracleV1__factory = GLPPriceOracleV1__factory;
GLPPriceOracleV1__factory.bytecode = _bytecode;
GLPPriceOracleV1__factory.abi = _abi;
