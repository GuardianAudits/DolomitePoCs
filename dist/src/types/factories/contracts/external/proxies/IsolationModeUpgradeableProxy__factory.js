"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsolationModeUpgradeableProxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        stateMutability: "nonpayable",
        type: "fallback",
    },
    {
        inputs: [],
        name: "implementation",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "isInitialized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "vaultFactory",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061004461003f60017f4c711eee7e3094af1816c5450bcb78a8ffe46729a7979be7e0bf539fb4d4eef361005f565b339055565b610076565b634e487b7160e01b600052601160045260246000fd5b60008282101561007157610071610049565b500390565b610c04806100856000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100fe578063c4d66de814610106578063d8a06f731461011957610067565b8063392e53cd146100cb5780635c60da1b146100e9575b6100b9610072610121565b7f49736f6c6174696f6e4d6f64655570677261646561626c6550726f78790000007f4e6f7420696e697469616c697a6564000000000000000000000000000000000061015d565b6100c96100c4610213565b61029f565b005b6100d3610121565b6040516100e09190610829565b60405180910390f35b6100f1610213565b6040516100e09190610864565b6100f16102c3565b6100c9610114366004610891565b6102f3565b6100f16104a3565b600061015561015160017f059687b4dba0a8c0c94866b6d34b3f94074057ac6e4d8d39cf07d3a0a55f20506108e9565b5490565b600114905090565b8261020e5761016b826104d3565b7f3a20000000000000000000000000000000000000000000000000000000000000610195836104d3565b6040516020016101a793929190610976565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a0000000000000000000000000000000000000000000000000000000008252610205916004016109f7565b60405180910390fd5b505050565b600061021d6104a3565b73ffffffffffffffffffffffffffffffffffffffff1663a6e7d83f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561026257600080fd5b505afa158015610276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029a9190610a1a565b905090565b3660008037600080366000845af43d6000803e8080156102be573d6000f35b3d6000fd5b600061029a61015160017fa7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b6108e9565b6103466102fe610121565b157f49736f6c6174696f6e4d6f64655570677261646561626c6550726f78790000007f416c726561647920696e697469616c697a65640000000000000000000000000061015d565b610439306103526104a3565b73ffffffffffffffffffffffffffffffffffffffff1663b01f61e1846040518263ffffffff1660e01b815260040161038a9190610864565b60206040518083038186803b1580156103a257600080fd5b505afa1580156103b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103da9190610a1a565b73ffffffffffffffffffffffffffffffffffffffff16147f49736f6c6174696f6e4d6f64655570677261646561626c6550726f78790000007f496e76616c6964206163636f756e740000000000000000000000000000000000846105a4565b61046d61046760017f059687b4dba0a8c0c94866b6d34b3f94074057ac6e4d8d39cf07d3a0a55f20506108e9565b60019055565b6104a061049b60017fa7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b6108e9565b829055565b50565b600061029a61015160017f4c711eee7e3094af1816c5450bcb78a8ffe46729a7979be7e0bf539fb4d4eef36108e9565b60606000826040516020016104e89190610a41565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060205b8015610589578061052b81610a56565b91505081818151811061054057610540610a8b565b01602001517fff000000000000000000000000000000000000000000000000000000000000001615610584576000610579826001610aba565b835250909392505050565b61051b565b5060408051600080825260208201909252905b509392505050565b8361063c576105b2836104d3565b7f3a200000000000000000000000000000000000000000000000000000000000006105dc846104d3565b7f203c00000000000000000000000000000000000000000000000000000000000061060685610642565b6040516101a79594939291907f3e0000000000000000000000000000000000000000000000000000000000000090602001610afa565b50505050565b60408051602a808252606082810190935273ffffffffffffffffffffffffffffffffffffffff841691600091602082018180368337019050509050603060f81b8160008151811061069557610695610a8b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350607860f81b816001815181106106dc576106dc610a8b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b601481101561059c576000610724826002610b58565b9050610732600f85166107f5565b8361073e8360296108e9565b8151811061074e5761074e610a8b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600484901c9350610790600f85166107f5565b8361079c8360286108e9565b815181106107ac576107ac610a8b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505060049290921c91806107ed81610b95565b91505061070e565b6000600a8210156108145761080b603083610aba565b60f81b92915050565b61080b605783610aba565b8015155b82525050565b60208101610837828461081f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff8216610837565b6108238161083d565b60208101610837828461085b565b61087b8161083d565b81146104a057600080fd5b803561083781610872565b6000602082840312156108a6576108a6600080fd5b60006108b28484610886565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156108fb576108fb6108ba565b500390565b60005b8381101561091b578181015183820152602001610903565b8381111561063c5750506000910152565b6000610936825190565b610944818560208601610900565b9290920192915050565b7fffff0000000000000000000000000000000000000000000000000000000000008116610823565b6000610982828661092c565b915061098e828561094e565b60028201915061099e828461092c565b95945050505050565b60006109b1825190565b8084526020840193506109c8818560208601610900565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b60208082528101610a0881846109a7565b9392505050565b805161083781610872565b600060208284031215610a2f57610a2f600080fd5b60006108b28484610a0f565b80610823565b6000610a4d8284610a3b565b50602001919050565b600081610a6557610a656108ba565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008219821115610acd57610acd6108ba565b500190565b7fff000000000000000000000000000000000000000000000000000000000000008116610823565b6000610b06828961092c565b9150610b12828861094e565b600282019150610b22828761092c565b9150610b2e828661094e565b600282019150610b3e828561092c565b9150610b4a8284610ad2565b506001019695505050505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b9057610b906108ba565b500290565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bc757610bc76108ba565b506001019056fea2646970667358221220ce7858ec6d1d605fba2efe1a52850a19b0e42428f13c3a969b4246d6a988131f64736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class IsolationModeUpgradeableProxy__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IsolationModeUpgradeableProxy__factory = IsolationModeUpgradeableProxy__factory;
IsolationModeUpgradeableProxy__factory.bytecode = _bytecode;
IsolationModeUpgradeableProxy__factory.abi = _abi;
