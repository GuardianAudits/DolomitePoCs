"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParaswapAggregatorTrader__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_paraswapAugustusRouter",
                type: "address",
            },
            {
                internalType: "address",
                name: "_paraswapTransferProxy",
                type: "address",
            },
            {
                internalType: "address",
                name: "_dolomiteMargin",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "DOLOMITE_MARGIN",
        outputs: [
            {
                internalType: "contract IDolomiteMargin",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "PARASWAP_AUGUSTUS_ROUTER",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "PARASWAP_TRANSFER_PROXY",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "_receiver",
                type: "address",
            },
            {
                internalType: "address",
                name: "_outputToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_inputToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_inputAmount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_orderData",
                type: "bytes",
            },
        ],
        name: "exchange",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "getExchangeCost",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x60e06040523480156200001157600080fd5b5060405162001aa038038062001aa083398101604081905262000034916200008c565b6001600160a01b0390811660805291821660a0521660c052620000e4565b60006001600160a01b0382165b92915050565b620000708162000052565b81146200007c57600080fd5b50565b80516200005f8162000065565b600080600060608486031215620000a657620000a6600080fd5b6000620000b486866200007f565b9350506020620000c7868287016200007f565b9250506040620000da868287016200007f565b9150509250925092565b60805160a05160c051611979620001276000396000818161010f015261024201526000818160a801526105f5015260008181606e01526101d201526119796000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80633a8fdd7d116100505780633a8fdd7d146100d75780637d98ebac146100f757806384796caf1461010a57600080fd5b806315c14a4a1461006c57806317f5e788146100a3575b600080fd5b7f000000000000000000000000000000000000000000000000000000000000000060405161009a9190610eec565b60405180910390f35b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b60405161009a9190610f21565b6100ea6100e5366004610fb4565b610131565b60405161009a919061103e565b6100ea61010536600461104c565b6101b5565b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b600061015c7f506172617377617041676772656761746f7254726164657200000000000000006103aa565b60405160200161016c9190611145565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526101ac916004016111d7565b60405180910390fd5b60003361023c73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682147f4f6e6c79446f6c6f6d6974654d617267696e00000000000000000000000000007f4f6e6c7920446f6c6f6d6974652063616e2063616c6c2066756e6374696f6e008461045d565b610267867f0000000000000000000000000000000000000000000000000000000000000000876104fb565b600080610276858701876112f4565b91509150610283816105f0565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8b16906370a08231906102d8903090600401610f21565b60206040518083038186803b1580156102f057600080fd5b505afa158015610304573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103289190611357565b905061037a838210157f506172617377617041676772656761746f7254726164657200000000000000007f496e73756666696369656e74206f757470757420616d6f756e740000000000008487610718565b61039b73ffffffffffffffffffffffffffffffffffffffff8b168c836107e3565b9b9a5050505050505050505050565b60606000826040516020016103bf9190611378565b60408051601f19818403018152919052905060205b801561044257806103e4816113bc565b9150508181815181106103f9576103f96113f1565b01602001517fff00000000000000000000000000000000000000000000000000000000000000161561043d576000610432826001611420565b835250909392505050565b6103d4565b5060408051600080825260208201909252905b509392505050565b836104f55761046b836103aa565b7f3a20000000000000000000000000000000000000000000000000000000000000610495846103aa565b7f203c0000000000000000000000000000000000000000000000000000000000006104bf8561094a565b60405161016c9594939291907f3e0000000000000000000000000000000000000000000000000000000000000090602001611488565b50505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063dd62ed3e9061055290309087906004016114e6565b60206040518083038186803b15801561056a57600080fd5b505afa15801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a29190611357565b11156105ca576105ca73ffffffffffffffffffffffffffffffffffffffff84168360006107e3565b6105eb73ffffffffffffffffffffffffffffffffffffffff841683836107e3565b505050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16836040516106389190611501565b6000604051808303816000865af19150503d8060008114610675576040519150601f19603f3d011682016040523d82523d6000602084013e61067a565b606091505b5091509150816105eb576044815110156106c7576106b77f506172617377617041676772656761746f7254726164657200000000000000006103aa565b60405160200161016c919061150d565b6004016106f37f506172617377617041676772656761746f7254726164657200000000000000006103aa565b81806020019051810190610707919061159f565b60405160200161016c9291906115da565b846107dc57610726846103aa565b7f3a20000000000000000000000000000000000000000000000000000000000000610750856103aa565b7f203c00000000000000000000000000000000000000000000000000000000000061077a86610afd565b7f2c200000000000000000000000000000000000000000000000000000000000006107a487610afd565b60405161016c97969594939291907f3e0000000000000000000000000000000000000000000000000000000000000090602001611618565b5050505050565b80158061089157506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063dd62ed3e9061083f90309086906004016114e6565b60206040518083038186803b15801561085757600080fd5b505afa15801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f9190611357565b155b6108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ac906116f1565b6105eb8363095ea7b360e01b84846040516024016108e6929190611701565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610c3d565b60408051602a808252606082810190935273ffffffffffffffffffffffffffffffffffffffff841691600091602082018180368337019050509050603060f81b8160008151811061099d5761099d6113f1565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350607860f81b816001815181106109e4576109e46113f1565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b6014811015610455576000610a2c82600261171c565b9050610a3a600f8516610cf3565b83610a46836029611759565b81518110610a5657610a566113f1565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600484901c9350610a98600f8516610cf3565b83610aa4836028611759565b81518110610ab457610ab46113f1565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505060049290921c9180610af581611770565b915050610a16565b606081610b3d57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610b675780610b5181611770565b9150610b609050600a836117d8565b9150610b41565b60008167ffffffffffffffff811115610b8257610b826111e8565b6040519080825280601f01601f191660200182016040528015610bac576020820181803683370190505b508593509050815b8015610c345780610bc4816113bc565b9150610bd39050600a856117ec565b610bde906030611420565b60f81b828281518110610bf357610bf36113f1565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610c2d600a856117d8565b9350610bb4565b50949350505050565b6000610c9f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610d1d9092919063ffffffff16565b8051909150156105eb5780806020019051810190610cbd9190611813565b6105eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ac9061188e565b6000600a821015610d1257610d09603083611420565b60f81b92915050565b610d09605783611420565b6060610d2c8484600085610d36565b90505b9392505050565b606082471015610d72576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ac906118f8565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d9b9190611501565b60006040518083038185875af1925050503d8060008114610dd8576040519150601f19603f3d011682016040523d82523d6000602084013e610ddd565b606091505b5091509150610dee87838387610dfb565b925050505b949350505050565b60608315610e5e578251610e575773ffffffffffffffffffffffffffffffffffffffff85163b610e57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ac90611908565b5081610df3565b610df38383815115610e735781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ac91906111d7565b600073ffffffffffffffffffffffffffffffffffffffff82165b92915050565b6000610ec182610ea7565b6000610ec182610ec7565b610ee681610ed2565b82525050565b60208101610ec18284610edd565b600073ffffffffffffffffffffffffffffffffffffffff8216610ec1565b610ee681610efa565b60208101610ec18284610f18565b610f3881610efa565b8114610f4357600080fd5b50565b8035610ec181610f2f565b80610f38565b8035610ec181610f51565b60008083601f840112610f7757610f77600080fd5b50813567ffffffffffffffff811115610f9257610f92600080fd5b602083019150836001820283011115610fad57610fad600080fd5b9250929050565b600080600080600060808688031215610fcf57610fcf600080fd5b6000610fdb8888610f46565b9550506020610fec88828901610f46565b9450506040610ffd88828901610f57565b935050606086013567ffffffffffffffff81111561101d5761101d600080fd5b61102988828901610f62565b92509250509295509295909350565b80610ee6565b60208101610ec18284611038565b600080600080600080600060c0888a03121561106a5761106a600080fd5b60006110768a8a610f46565b97505060206110878a828b01610f46565b96505060406110988a828b01610f46565b95505060606110a98a828b01610f46565b94505060806110ba8a828b01610f57565b93505060a088013567ffffffffffffffff8111156110da576110da600080fd5b6110e68a828b01610f62565b925092505092959891949750929550565b60005b838110156111125781810151838201526020016110fa565b838111156104f55750506000910152565b600061112d825190565b61113b8185602086016110f7565b9290920192915050565b60006111518284611123565b7f3a2067657445786368616e6765436f7374206e6f7420696d706c656d656e746581527f64000000000000000000000000000000000000000000000000000000000000006020820152915060218201610d2f565b60006111af825190565b8084526020840193506111c68185602086016110f7565b601f01601f19169290920192915050565b60208082528101610d2f81846111a5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561123d5761123d6111e8565b6040525050565b600061124f60405190565b905061125b8282611217565b919050565b600067ffffffffffffffff82111561127a5761127a6111e8565b601f19601f83011660200192915050565b82818337506000910152565b60006112aa6112a584611260565b611244565b9050828152602081018484840111156112c5576112c5600080fd5b61045584828561128b565b600082601f8301126112e4576112e4600080fd5b8135610df3848260208601611297565b6000806040838503121561130a5761130a600080fd5b60006113168585610f57565b925050602083013567ffffffffffffffff81111561133657611336600080fd5b611342858286016112d0565b9150509250929050565b8051610ec181610f51565b60006020828403121561136c5761136c600080fd5b6000610df3848461134c565b60006113848284611038565b50602001919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000816113cb576113cb61138d565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082198211156114335761143361138d565b500190565b7fffff0000000000000000000000000000000000000000000000000000000000008116610ee6565b7fff000000000000000000000000000000000000000000000000000000000000008116610ee6565b60006114948289611123565b91506114a08288611438565b6002820191506114b08287611123565b91506114bc8286611438565b6002820191506114cc8285611123565b91506114d88284611460565b506001019695505050505050565b604081016114f48285610f18565b610d2f6020830184610f18565b6000610d2f8284611123565b60006115198284611123565b7f3a207265766572740000000000000000000000000000000000000000000000008152915060088201610d2f565b60006115556112a584611260565b90508281526020810184848401111561157057611570600080fd5b6104558482856110f7565b600082601f83011261158f5761158f600080fd5b8151610df3848260208601611547565b6000602082840312156115b4576115b4600080fd5b815167ffffffffffffffff8111156115ce576115ce600080fd5b610df38482850161157b565b60006115e68285611123565b7f3a2000000000000000000000000000000000000000000000000000000000000081526002019150610df38284611123565b6000611624828b611123565b9150611630828a611438565b6002820191506116408289611123565b915061164c8288611438565b60028201915061165c8287611123565b91506116688286611438565b6002820191506116788285611123565b91506116848284611460565b5060010198975050505050505050565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015291505b5060400190565b60208082528101610ec181611694565b6040810161170f8285610f18565b610d2f6020830184611038565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117545761175461138d565b500290565b60008282101561176b5761176b61138d565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117a2576117a261138d565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826117e7576117e76117a9565b500490565b6000826117fb576117fb6117a9565b500690565b801515610f38565b8051610ec181611800565b60006020828403121561182857611828600080fd5b6000610df38484611808565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e81527f6f74207375636365656400000000000000000000000000000000000000000000602082015291506116ea565b60208082528101610ec181611834565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f81527f722063616c6c0000000000000000000000000000000000000000000000000000602082015291506116ea565b60208082528101610ec18161189e565b60208082528101610ec181601d81527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060208201526040019056fea2646970667358221220f32722c63eb75477de82235f8f0ad7a4a46dd51b15c217d44e5807153125f50b64736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class ParaswapAggregatorTrader__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_paraswapAugustusRouter, _paraswapTransferProxy, _dolomiteMargin, overrides) {
        return super.deploy(_paraswapAugustusRouter, _paraswapTransferProxy, _dolomiteMargin, overrides || {});
    }
    getDeployTransaction(_paraswapAugustusRouter, _paraswapTransferProxy, _dolomiteMargin, overrides) {
        return super.getDeployTransaction(_paraswapAugustusRouter, _paraswapTransferProxy, _dolomiteMargin, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ParaswapAggregatorTrader__factory = ParaswapAggregatorTrader__factory;
ParaswapAggregatorTrader__factory.bytecode = _bytecode;
ParaswapAggregatorTrader__factory.abi = _abi;
