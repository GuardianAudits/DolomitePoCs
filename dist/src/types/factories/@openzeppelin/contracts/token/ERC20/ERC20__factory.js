"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC20__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "name_",
                type: "string",
            },
            {
                internalType: "string",
                name: "symbol_",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "subtractedValue",
                type: "uint256",
            },
        ],
        name: "decreaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "addedValue",
                type: "uint256",
            },
        ],
        name: "increaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b5060405162000fa138038062000fa183398101604081905262000034916200024b565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200030c565b8280546200007690620002db565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b03821117156200014c576200014c6200010e565b6040525050565b60006200015f60405190565b90506200016d828262000124565b919050565b60006001600160401b038211156200018e576200018e6200010e565b601f19601f83011660200192915050565b60005b83811015620001bc578181015183820152602001620001a2565b83811115620001cc576000848401525b50505050565b6000620001e9620001e38462000172565b62000153565b905082815260208101848484011115620002065762000206600080fd5b620002138482856200019f565b509392505050565b600082601f830112620002315762000231600080fd5b815162000243848260208601620001d2565b949350505050565b60008060408385031215620002635762000263600080fd5b82516001600160401b038111156200027e576200027e600080fd5b6200028c858286016200021b565b92505060208301516001600160401b03811115620002ad57620002ad600080fd5b620002bb858286016200021b565b9150509250929050565b634e487b7160e01b600052602260045260246000fd5b600281046001821680620002f057607f821691505b60208210811415620003065762000306620002c5565b50919050565b610c85806200031c6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610190578063a9059cbb146101a3578063dd62ed3e146101b657600080fd5b8063395093511461013f57806370a082311461015257806395d89b411461018857600080fd5b806318160ddd116100b257806318160ddd1461010c57806323b872dd1461011d578063313ce5671461013057600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101fc565b6040516100e3919061075d565b60405180910390f35b6100ff6100fa3660046107c6565b61028e565b6040516100e3919061080d565b6002545b6040516100e39190610821565b6100ff61012b36600461082f565b6102a8565b60126040516100e39190610888565b6100ff61014d3660046107c6565b6102cc565b610110610160366004610896565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d6610318565b6100ff61019e3660046107c6565b610327565b6100ff6101b13660046107c6565b6103ab565b6101106101c43660046108bf565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020b90610921565b80601f016020809104026020016040519081016040528092919081815260200182805461023790610921565b80156102845780601f1061025957610100808354040283529160200191610284565b820191906000526020600020905b81548152906001019060200180831161026757829003601f168201915b5050505050905090565b60003361029c8185856103b9565b60019150505b92915050565b6000336102b68582856104c8565b6102c185858561056f565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061029c908290869061031390879061097d565b6103b9565b60606004805461020b90610921565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091908381101561039e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610395906109f2565b60405180910390fd5b6102c182868684036103b9565b60003361029c81858561056f565b73ffffffffffffffffffffffffffffffffffffffff8316610406576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590610a5c565b73ffffffffffffffffffffffffffffffffffffffff8216610453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590610ac6565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104bb908590610821565b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610569578181101561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590610ad6565b61056984848484036103b9565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166105bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590610b6b565b73ffffffffffffffffffffffffffffffffffffffff8216610609576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590610bd5565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590610c3f565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106d4908690610821565b60405180910390a3610569565b60005b838110156106fc5781810151838201526020016106e4565b838111156105695750506000910152565b6000610717825190565b80845260208401935061072e8185602086016106e1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b6020808252810161076e818461070d565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82166102a2565b61079c81610775565b81146107a757600080fd5b50565b80356102a281610793565b8061079c565b80356102a2816107b5565b600080604083850312156107dc576107dc600080fd5b60006107e885856107aa565b92505060206107f9858286016107bb565b9150509250929050565b8015155b82525050565b602081016102a28284610803565b80610807565b602081016102a2828461081b565b60008060006060848603121561084757610847600080fd5b600061085386866107aa565b9350506020610864868287016107aa565b9250506040610875868287016107bb565b9150509250925092565b60ff8116610807565b602081016102a2828461087f565b6000602082840312156108ab576108ab600080fd5b60006108b784846107aa565b949350505050565b600080604083850312156108d5576108d5600080fd5b60006108e185856107aa565b92505060206107f9858286016107aa565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60028104600182168061093557607f821691505b60208210811415610948576109486108f2565b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156109905761099061094e565b500190565b602581526000602082017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7781527f207a65726f000000000000000000000000000000000000000000000000000000602082015291505b5060400190565b602080825281016102a281610995565b602481526000602082017f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481527f7265737300000000000000000000000000000000000000000000000000000000602082015291506109eb565b602080825281016102a281610a02565b602281526000602082017f45524332303a20617070726f766520746f20746865207a65726f20616464726581527f7373000000000000000000000000000000000000000000000000000000000000602082015291506109eb565b602080825281016102a281610a6c565b602080825281016102a281601d81527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000602082015260400190565b602581526000602082017f45524332303a207472616e736665722066726f6d20746865207a65726f20616481527f6472657373000000000000000000000000000000000000000000000000000000602082015291506109eb565b602080825281016102a281610b11565b602381526000602082017f45524332303a207472616e7366657220746f20746865207a65726f206164647281527f6573730000000000000000000000000000000000000000000000000000000000602082015291506109eb565b602080825281016102a281610b7b565b602681526000602082017f45524332303a207472616e7366657220616d6f756e742065786365656473206281527f616c616e63650000000000000000000000000000000000000000000000000000602082015291506109eb565b602080825281016102a281610be556fea26469706673582212202c83cc650b3c805c5665e7a53b12f363f9156435f77073d06cc42439bece2bce64736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class ERC20__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(name_, symbol_, overrides) {
        return super.deploy(name_, symbol_, overrides || {});
    }
    getDeployTransaction(name_, symbol_, overrides) {
        return super.getDeployTransaction(name_, symbol_, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ERC20__factory = ERC20__factory;
ERC20__factory.bytecode = _bytecode;
ERC20__factory.abi = _abi;
